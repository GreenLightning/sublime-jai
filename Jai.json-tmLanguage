// [PackageDev] target_format: plist
{
	"name": "Jai",
	"scopeName": "source.jai",
	"fileTypes": ["jai"],
	"patterns": [
		{ "include": "#comment" },
		{ "include": "#constant" },
		{ "include": "#keyword" },
		{ "include": "#struct" },
		{ "include": "#enum" },
		{ "include": "#new" },
		{ "include": "#cast" }
	],
	"repository": {
		"comment": {
			"patterns": [
				{ "include": "#line-comment" },
				{ "include": "#block-comment" }
			]
		},
		"block-comment": {
			"name": "comment.block.source.jai",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": [
				{ "include": "#block-comment" }
			]
		},
		"line-comment": {
			"name": "comment.line.source.jai",
			"begin": "//",
			"end": "$"
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.language.true.source.jai",
					"match": "\\btrue\\b"
				},
				{
					"name": "constant.language.false.source.jai",
					"match": "\\bfalse\\b"
				},
				{
					"name": "constant.language.null.source.jai",
					"match": "\\bnull\\b"
				},
				{
					"name": "constant.numeric.hexadecimal.source.jai",
					"match": "(?<!\\w)0x[[:xdigit:]]+"
				},
				{
					"name": "constant.numeric.decimal.source.jai",
					"match": "(?<!\\w)\\d+(?:\\.\\d+)?"
				},
				{
					"name": "string.quoted.double.source.jai",
					"match": "\".*?\""
				},
				{
					"name": "string.unquoted.source.jai",
					"begin": "(#string) (.*)$",
					"beginCaptures": {
						"1": { "name": "keyword.other.directive.source.jai" },
						"2": { "name": "constant.other.stringdelimiter.source.jai" }
					},
					"end": "^(\\2)$",
					"endCaptures": {
						"1": { "name": "constant.other.stringdelimiter.source.jai" }
					}
				}
			]
		},
		"keyword": {
			"patterns": [
				{
					"name": "keyword.other.directive.source.jai",
					"match": "#\\w*"
				},
				{
					"name": "keyword.other.tag.source.jai",
					"match": "@\\S+"
				},
				{
					"name": "keyword.control.source.jai",
					"match": "\\b(?:if|then|else|for|while|continue|return)\\b"
				},
				{
					"name": "keyword.operator.source.jai",
					"match": "\\b(?:delete|xx|size_of)\\b"
				},
				{
					"name": "keyword.operator.source.jai",
					"match": "(?:\\+|-|\\*|/|<|>|!)=?"
				},
				{
					"name": "keyword.operator.source.jai",
					"match": "==|<<|\\.\\.|&&"
				},
				{
					"name": "keyword.other.source.jai",
					"match": "\\b(?:defer|using|it|SOA|AOS)\\b"
				},
				{
					"name": "keyword.other.source.jai",
					"match": "---|\\$\\$"
				},
				{
					"name": "storage.type.source.jai",
					"match": "\\b(?:Any|void|string|bool|float|float32|float64|int|u8|u16|u32|u64|s8|s16|s32|s64)\\b"
				}
			]
		},
		"struct": {
			"match": "(\\w+)\\s*::\\s*(struct)\\b",
			"captures": {
				"1": { "name": "entity.name.type.struct.source.jai" },
				"2": { "name": "storage.type.struct.source.jai" }
			}
		},
		"enum": {
			"match": "(\\w+)\\s*::\\s*(enum)\\b",
			"captures": {
				"1": { "name": "entity.name.type.enum.source.jai" },
				"2": { "name": "storage.type.enum.source.jai" }
			}
		},
		"new": {
			"match": "\\b(new)\\s+(\\w+)",
			"captures": {
			    "1": { "name": "keyword.operator.new.source.jai" },
			    "2": { "name": "storage.type.source.jai" }
			}
		},
		"cast": {
			"match": "\\b(cast)\\s*\\((.+?)\\)",
			"captures": {
			    "1": { "name": "keyword.operator.source.jai" },
			    "2": { "name": "storage.type.source.jai" }
			}
		}
	},
	"uuid": "728cfc9a-25ea-429c-a559-daf7c5d46351"
}